import 'package:cloud_firestore/cloud_firestore.dart';import 'package:flutter/material.dart';import 'package:get/get_utils/src/extensions/internacionalization.dart';import 'package:shared_preferences/shared_preferences.dart';class MyCart extends StatefulWidget {  @override  _MyCartState createState() => _MyCartState();}class _MyCartState extends State<MyCart> {  String ?myString;  _loadCounter() async {    SharedPreferences prefs = await SharedPreferences.getInstance();    setState(() {      myString = prefs.getString('value');      print("shared:$myString");    });  }  @override  void initState() {    // TODO: implement initState    super.initState();    setState(() {      _loadCounter();    });  }  var id;  getUser()async{    SharedPreferences prefs = await SharedPreferences.getInstance();    id= prefs.getString('UserId');  }  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        backgroundColor: Color(0xFFF2C51D),        centerTitle: true,        title: Text('My Cart'.tr),      ),      body: Container(        margin: EdgeInsets.only(top: 30),        child: StreamBuilder(          stream:FirebaseFirestore.instance.collection('carts').where('UserId',isEqualTo:id).snapshots(),          builder:(  BuildContext context,AsyncSnapshot<QuerySnapshot> snapshot){            return Column(              children: [                Expanded(                  child: Container(                    child: ListView.builder(itemBuilder: (context,i){                      QueryDocumentSnapshot?x=snapshot.data?.docs[i];                      if(snapshot.hasData){                        return Container(                          margin: EdgeInsets.only(left: 20,right: 20),                          child: Card(                            color: Colors.white.withOpacity(.9),                            shape: OutlineInputBorder(                                borderRadius: BorderRadius.only(bottomLeft: Radius.circular(15),bottomRight:  Radius.circular(15)),                                borderSide: BorderSide.none                            ),                            child: Container(                              child: Column(                                children: [                                  Row(                                    children: [                                      Expanded(child: Image.network(x?['productImage'],width: double.infinity,height: 100,)),                                      Expanded(                                        child: Column(                                          mainAxisAlignment: MainAxisAlignment.start,                                          children: [                                            myString=='en'? Text(x?['productName']): Text(x?['productName_arabic']),                                            Padding(                                              padding: const EdgeInsets.all(8.0),                                              child: Text(x?['productAmount']),                                            ),                                            Padding(                                              padding: const EdgeInsets.all(8.0),                                              child: Text('${x?['productPrice']}'+'\t'+'EGP'),                                            ),                                            Padding(                                              padding: const EdgeInsets.all(8.0),                                              child: Row(                                                mainAxisAlignment: MainAxisAlignment.center,                                                children: [                                                  Text('Quantity:'.tr),                                                  Text(' ${x?['productQuantity']}'),                                                ],                                              ),                                            ),                                            Padding(                                              padding: const EdgeInsets.all(8.0),                                              child: Row(                                                mainAxisAlignment: MainAxisAlignment.center,                                                children: [                                                  Text('price:'.tr),                                                  Text('${x?['productPrice']*x?['productQuantity']}',textAlign: TextAlign.center,),                                                ],                                              ),                                            )                                          ],                                        ),                                      ),                                    ],                                  ),                                ],                              ),                            ),                          ),                        );                      }else{                        return Center(child: CircularProgressIndicator(),);                      }                    },                      itemCount:snapshot.data?.docs.length ,                    ),                  ),                ),                // Container(                //     width:double.infinity,                //     height:100,                //     child: RaisedButton(onPressed:()async{                //       String productsInfo = "";                //       int count = 1;                //       SharedPreferences prefs = await SharedPreferences.getInstance();                //       var email= prefs.getString('UserEmail');                //       var id=prefs.getString('UserId');                //       var address= prefs.getString('UserAddress');                //       var phoneNumber= prefs.getString('UserNumber');                //       var userName= prefs.getString('UserName');                //       FirebaseFirestore.instance.collection('Orders').doc(id).set({                //         'product':FieldValue.arrayUnion([{                //           'ProductName':widget.name,                //           'productImage':widget.image,                //           'productQuantity':widget.quantity,                //           'productPrice':widget.price,                //           'totalPrice':'${widget.price*widget.quantity}',                //           'userEmail':email,                //           'userId':id,                //           'UserAddress':address,                //           'UsherNumber':phoneNumber,                //           'userName':userName                //         }])                //       },SetOptions(merge: true));                //                //                //       Fluttertoast.showToast(msg: widget.name+'has been orderd',gravity: ToastGravity.BOTTOM);                //       Navigator.pushReplacement(context, MaterialPageRoute(builder: (context)=>OrderDetails(                //         user_id: '${id}',                //         userAddress: '${address}',                //         userEmail: '${email}',                //         userPhoneNumber: '${phoneNumber}',                //         userName: '${userName}',                //         product_id: widget.product_id,                //         price: widget.price,                //         // totalPrice: total? ,                //         quantity: widget.quantity,                //         name: widget.name,                //         amount: widget.amount,                //         image: widget.image,                //                //       )));                //     },                //       child: Text('Start order'),))              ],            );          } ,        ),      ),    );  }}